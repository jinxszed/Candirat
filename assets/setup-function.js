var SIZE = 25;
var WIDTH = 20;
var HEIGHT = 20;
var DIMENSIONS = 20;
var FIELD = [
    "0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0",
    "0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0",
    "0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0",
    "0,2,0,2,0,2,0,2,0,1,1,0,2,0,2,0,2,0,2,0",
    "0,3,0,3,0,3,0,3,0,1,1,0,3,0,3,0,3,0,3,0",
    "0,2,0,2,0,2,0,2,0,1,1,0,2,0,2,0,2,0,2,0",
    "0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0",
    "0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0",
    "0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0",
    "1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1,1",
    "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0",
    "0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,1,2,0",
    "0,1,0,0,1,0,0,1,0,1,1,1,1,0,1,0,1,0,1,0",
    "0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0",
    "0,1,0,3,0,3,0,1,0,1,1,1,1,0,0,0,1,0,1,0",
    "0,1,1,1,0,1,1,1,0,1,1,0,1,0,3,1,3,0,1,0",
    "0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,0,0,1,0",
    "0,2,1,3,0,3,1,2,0,1,1,0,2,1,1,1,1,1,2,0",
    "0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0"
];


function setup()
{
    createCanvas(500,500);
    for (var i = 0; i < 400;i++)
    {
        // field.push(new Tile(i % 20, Math.floor(i / 20), "BARRIER"));
        // i++;
        //field.push(new Tile(i % 20, Math.floor(i / 20), random(TYPES)));
        // i++;

        field = generateField();
    }
}

function draw () 
{
    background(51);

    // draw tiles
    //console.log(field);
    for (var i = 0; i < field.length; i++)
    {
        field[i].draw();
        
    }

}

function generateField() 
{
    f = [];
    
    
    for (var i = 0; i < 20; i++) 
    {
        // field.push(new Tile(i % 20, Math.floor(i /20), "BARRIER"));

        
        var row = FIELD[i].split(",");
        for (var j = 0; j < 20; j++)
        {
             var type = parseTileType(row[j]);

            //  if(type == "PACMAN")
            //  {
            //      console.log("PACMAN");
            //      console.log(i);
            //      console.log(j);
            //  }
             
             f.push(new Tile(j, i, type));
        }

    }
    return f;
}